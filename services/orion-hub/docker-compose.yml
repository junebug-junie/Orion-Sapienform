services:
  hub-app:
    build:
      context: ../..
      dockerfile: services/orion-hub/Dockerfile
    container_name: ${PROJECT}-hub
    ports:
      - "${HUB_PORT}:${HUB_PORT}"
    restart: unless-stopped
    depends_on:
      coqui-tts:
        condition: service_started
    volumes:
      - ./templates:/app/templates
      - /mnt/telemetry/models/whisper/${WHISPER_MODEL_SIZE}:/root/.cache/huggingface/hub/models--distil-whisper--${WHISPER_MODEL_SIZE}
    environment:
      # Core service identity
      - PROJECT=${PROJECT}
      - SERVICE_NAME=${SERVICE_NAME}
      - SERVICE_VERSION=${SERVICE_VERSION}
      - HUB_PORT=${HUB_PORT}

      # Whisper + Brain
      - WHISPER_MODEL_SIZE=${WHISPER_MODEL_SIZE}
      - WHISPER_DEVICE=${WHISPER_DEVICE}
      - WHISPER_COMPUTE_TYPE=${WHISPER_COMPUTE_TYPE}
      - BRAIN_URL=${BRAIN_URL}
      - LLM_MODEL=${LLM_MODEL}

      # Orion Bus
      - ORION_BUS_URL=${ORION_BUS_URL}
      - ORION_BUS_ENABLED=${ORION_BUS_ENABLED}

      # Channels
      - CHANNEL_VOICE_TRANSCRIPT=${CHANNEL_VOICE_TRANSCRIPT}
      - CHANNEL_VOICE_LLM=${CHANNEL_VOICE_LLM}
      - CHANNEL_VOICE_TTS=${CHANNEL_VOICE_TTS}
      - CHANNEL_COLLAPSE_INTAKE=${CHANNEL_COLLAPSE_INTAKE}
      # Correctly pass all brain channels now
      - CHANNEL_BRAIN_INTAKE=${CHANNEL_BRAIN_INTAKE}
      - CHANNEL_BRAIN_OUT=${CHANNEL_BRAIN_OUT}

      # Static / optional GPU and TTS service
      - TTS_URL=http://coqui-tts:5002/api/tts
      - NVIDIA_VISIBLE_DEVICES=all

    runtime: nvidia
    networks:
      - ${NET}
    # The 'command' is removed to allow the Dockerfile's ENTRYPOINT to take precedence.

  coqui-tts:
    image: ghcr.io/coqui-ai/tts-cpu
    container_name: ${PROJECT}-hub-tts
    ports:
      - "5002:5002"
    volumes:
      - /mnt/telemetry/models/coqui/tts:/root/.local/share/tts
    environment:
      - TTS_MODEL_NAME=tts_models/en/ljspeech/vits
    restart: unless-stopped
    entrypoint: tts-server
    networks:
      - ${NET}

  caddy:
    image: caddy:2-alpine
    container_name: ${PROJECT}-hub-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./caddy/Caddyfile.${MODE}:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    depends_on:
      - hub-app
    networks:
      - ${NET}

volumes:
  caddy_data:
  caddy_config:

networks:
  app-net:
    external: true

